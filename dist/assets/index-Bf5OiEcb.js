!function(){const t=document.createElement("link").relList;if(!(t&&t.supports&&t.supports("modulepreload"))){for(const t of document.querySelectorAll('link[rel="modulepreload"]'))e(t);new MutationObserver(t=>{for(const s of t)if("childList"===s.type)for(const t of s.addedNodes)"LINK"===t.tagName&&"modulepreload"===t.rel&&e(t)}).observe(document,{childList:!0,subtree:!0})}function e(t){if(t.ep)return;t.ep=!0;const e=function(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),"use-credentials"===t.crossOrigin?e.credentials="include":"anonymous"===t.crossOrigin?e.credentials="omit":e.credentials="same-origin",e}(t);fetch(t.href,e)}}();class t{constructor(){this.tasks=this.loadTasks(),this.translations=new Map,this.currentFilter="all",this.currentLanguage="en",this.currentEditId=null,this.currentDeleteId=null,this.searchQuery="",this.initializeElements(),this.loadLanguagePreference(),this.bindEvents(),this.renderTasks(),this.updateStats()}initializeElements(){this.taskInput=document.getElementById("taskInput"),this.prioritySelect=document.getElementById("prioritySelect"),this.dueDateInput=document.getElementById("dueDateInput"),this.addTaskBtn=document.getElementById("addTaskBtn"),this.searchInput=document.getElementById("searchInput"),this.languageSelect=document.getElementById("languageSelect"),this.filterBtns=document.querySelectorAll(".filter-btn"),this.tasksGrid=document.getElementById("tasksGrid"),this.emptyState=document.getElementById("emptyState"),this.totalTasksSpan=document.getElementById("totalTasks"),this.completedTasksSpan=document.getElementById("completedTasks"),this.editModal=document.getElementById("editModal"),this.confirmModal=document.getElementById("confirmModal"),this.editTaskInput=document.getElementById("editTaskInput"),this.editPrioritySelect=document.getElementById("editPrioritySelect"),this.editDueDateInput=document.getElementById("editDueDateInput")}bindEvents(){this.addTaskBtn.addEventListener("click",()=>this.addTask()),this.taskInput.addEventListener("keypress",t=>{"Enter"===t.key&&this.addTask()}),this.searchInput.addEventListener("input",t=>{this.searchQuery=t.target.value.toLowerCase(),this.renderTasks()}),this.filterBtns.forEach(t=>{t.addEventListener("click",t=>{this.setFilter(t.target.dataset.filter)})}),this.languageSelect.addEventListener("change",t=>{this.setLanguage(t.target.value)}),document.getElementById("closeModal").addEventListener("click",()=>this.closeEditModal()),document.getElementById("cancelEdit").addEventListener("click",()=>this.closeEditModal()),document.getElementById("saveEdit").addEventListener("click",()=>this.saveEdit()),document.getElementById("closeConfirmModal").addEventListener("click",()=>this.closeConfirmModal()),document.getElementById("cancelDelete").addEventListener("click",()=>this.closeConfirmModal()),document.getElementById("confirmDelete").addEventListener("click",()=>this.confirmDelete()),this.editModal.addEventListener("click",t=>{t.target===this.editModal&&this.closeEditModal()}),this.confirmModal.addEventListener("click",t=>{t.target===this.confirmModal&&this.closeConfirmModal()})}generateId(){return Date.now().toString(36)+Math.random().toString(36).substr(2)}addTask(){const t=this.taskInput.value.trim(),e=this.prioritySelect.value,s=this.dueDateInput.value;if(!t)return void this.showNotification("Please enter a task title","error");const i={id:this.generateId(),title:t,originalTitle:t,displayTitle:t,priority:e,dueDate:s,completed:!1,createdAt:(new Date).toISOString()};this.tasks.unshift(i),this.saveTasks(),"en"!==this.currentLanguage&&this.translateTask(i,this.currentLanguage).then(()=>{this.applyCachedTranslations(this.currentLanguage),this.renderTasks()}),this.renderTasks(),this.updateStats(),this.clearForm(),this.showNotification("Task added successfully!","success")}toggleTask(t){const e=this.tasks.find(e=>e.id===t);if(e){e.completed=!e.completed,this.saveTasks(),this.renderTasks(),this.updateStats();const t=e.completed?"Task completed!":"Task marked as pending";this.showNotification(t,"success")}}editTask(t){const e=this.tasks.find(e=>e.id===t);e&&(this.currentEditId=t,this.editTaskInput.value=e.title,this.editPrioritySelect.value=e.priority,this.editDueDateInput.value=e.dueDate,this.openEditModal())}saveEdit(){const t=this.editTaskInput.value.trim(),e=this.editPrioritySelect.value,s=this.editDueDateInput.value;if(!t)return void this.showNotification("Please enter a task title","error");const i=this.tasks.find(t=>t.id===this.currentEditId);i&&(i.title=t,i.priority=e,i.dueDate=s,this.saveTasks(),this.renderTasks(),this.updateStats(),this.closeEditModal(),this.showNotification("Task updated successfully!","success"))}deleteTask(t){this.currentDeleteId=t,this.openConfirmModal()}confirmDelete(){this.tasks=this.tasks.filter(t=>t.id!==this.currentDeleteId),this.saveTasks(),this.renderTasks(),this.updateStats(),this.closeConfirmModal(),this.showNotification("Task deleted successfully!","success")}setFilter(t){this.currentFilter=t,this.filterBtns.forEach(e=>{e.classList.toggle("active",e.dataset.filter===t)}),this.renderTasks()}async setLanguage(t){this.currentLanguage=t,this.languageSelect.value=t,this.saveLanguage(t),"en"!==t?await this.translateAllTasks(t):this.restoreOriginalTasks(),this.renderTasks()}async translateAllTasks(t){const e=this.tasks.filter(e=>{const s=`${e.id}_${t}`;return!this.translations.has(s)});if(0!==e.length)try{this.showNotification("Translating tasks...","info");const s=5;for(let i=0;i<e.length;i+=s){const a=e.slice(i,i+s);await Promise.all(a.map(e=>this.translateTask(e,t)))}this.applyCachedTranslations(t),this.showNotification("Tasks translated successfully!","success")}catch(s){this.showNotification("Translation failed. Showing original text.","error")}else this.applyCachedTranslations(t)}async translateTask(t,e){const s=`${t.id}_${e}`;if(!this.translations.has(s))try{t.originalTitle||(t.originalTitle=t.title);const i=await fetch(`https://api.mymemory.translated.net/get?q=${encodeURIComponent(t.originalTitle)}&langpair=en|${e}`);if(!i.ok)throw new Error("Translation API request failed");const a=await i.json();if(200!==a.responseStatus)throw new Error("Translation API returned error");{const t=a.responseData.translatedText;this.translations.set(s,t)}}catch(i){this.translations.set(s,t.originalTitle)}}applyCachedTranslations(t){this.tasks.forEach(e=>{const s=`${e.id}_${t}`,i=this.translations.get(s);e.displayTitle=i||(e.originalTitle||e.title)})}restoreOriginalTasks(){this.tasks.forEach(t=>{t.displayTitle=t.originalTitle||t.title})}getFilteredTasks(){let t=this.tasks;switch(this.currentFilter){case"pending":t=t.filter(t=>!t.completed);break;case"completed":t=t.filter(t=>t.completed);break;case"high":t=t.filter(t=>"high"===t.priority)}return this.searchQuery&&(t=t.filter(t=>t.title.toLowerCase().includes(this.searchQuery))),t}renderTasks(){const t=this.getFilteredTasks();if(0===t.length)return this.tasksGrid.style.display="none",void(this.emptyState.style.display="block");this.tasksGrid.style.display="grid",this.emptyState.style.display="none",this.tasksGrid.innerHTML=t.map(t=>this.createTaskCard(t)).join(""),t.forEach(t=>{const e=document.querySelector(`[data-task-id="${t.id}"]`);if(e){e.classList.add("fade-in");e.querySelector(".task-checkbox input").addEventListener("change",()=>this.toggleTask(t.id));e.querySelector(".edit-btn").addEventListener("click",()=>this.editTask(t.id));e.querySelector(".delete-btn").addEventListener("click",()=>this.deleteTask(t.id))}})}createTaskCard(t){const e=t.dueDate?new Date(t.dueDate):null,s=new Date,i=new Date(s);i.setDate(i.getDate()+1);let a="",n="";if(e){const t=e.getTime()-s.getTime(),i=Math.ceil(t/864e5);i<0?(a="overdue",n="Overdue"):0===i?(a="due-soon",n="Due today"):1===i?(a="due-soon",n="Due tomorrow"):n=`Due ${e.toLocaleDateString()}`}return`\n            <div class="task-card ${t.completed?"completed":""}" data-task-id="${t.id}">\n                <div class="task-header">\n                    <span class="task-priority ${t.priority}">${t.priority}</span>\n                    <div class="task-actions">\n                        <button class="action-btn edit-btn" title="Edit task">\n                            <i class="fas fa-edit"></i>\n                        </button>\n                        <button class="action-btn delete-btn" title="Delete task">\n                            <i class="fas fa-trash"></i>\n                        </button>\n                    </div>\n                </div>\n                <div class="task-content">${this.escapeHtml(t.displayTitle||t.title)}</div>\n                <div class="task-meta">\n                    <label class="task-checkbox">\n                        <input type="checkbox" ${t.completed?"checked":""}>\n                        <span>${t.completed?"Completed":"Mark as complete"}</span>\n                    </label>\n                    ${e?`<div class="task-due-date ${a}">\n                        <i class="fas fa-calendar-alt"></i>\n                        <span>${n}</span>\n                    </div>`:""}\n                </div>\n            </div>\n        `}updateStats(){const t=this.tasks.length,e=this.tasks.filter(t=>t.completed).length;this.totalTasksSpan.textContent=t,this.completedTasksSpan.textContent=e}clearForm(){this.taskInput.value="",this.prioritySelect.value="medium",this.dueDateInput.value="",this.taskInput.focus()}openEditModal(){this.editModal.classList.add("active"),document.body.style.overflow="hidden",this.editTaskInput.focus()}closeEditModal(){this.editModal.classList.remove("active"),document.body.style.overflow="",this.currentEditId=null}openConfirmModal(){this.confirmModal.classList.add("active"),document.body.style.overflow="hidden"}closeConfirmModal(){this.confirmModal.classList.remove("active"),document.body.style.overflow="",this.currentDeleteId=null}showNotification(t,e="info"){const s=document.createElement("div");switch(s.className=`notification ${e}`,s.style.cssText="\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            padding: 1rem 1.5rem;\n            border-radius: 0.5rem;\n            color: white;\n            font-weight: 500;\n            z-index: 10000;\n            transform: translateX(100%);\n            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n            max-width: 400px;\n            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\n        ",e){case"success":s.style.background="#10B981";break;case"error":s.style.background="#EF4444";break;case"warning":s.style.background="#F59E0B";break;default:s.style.background="#3B82F6"}s.textContent=t,document.body.appendChild(s),setTimeout(()=>{s.style.transform="translateX(0)"},10),setTimeout(()=>{s.style.transform="translateX(100%)",setTimeout(()=>{document.body.removeChild(s)},300)},3e3)}escapeHtml(t){const e=document.createElement("div");return e.textContent=t,e.innerHTML}saveTasks(){localStorage.setItem("todoTasks",JSON.stringify(this.tasks)),localStorage.setItem("todoTranslations",JSON.stringify([...this.translations]))}loadTasks(){this.translations=new Map;try{const t=localStorage.getItem("todoTasks"),e=localStorage.getItem("todoTranslations");return e&&(this.translations=new Map(JSON.parse(e))),t?JSON.parse(t):[]}catch(t){return[]}}saveLanguage(t){localStorage.setItem("todoLanguage",t)}loadLanguage(){return localStorage.getItem("todoLanguage")}loadLanguagePreference(){const t=this.loadLanguage();t&&"en"!==t&&(this.currentLanguage=t,this.languageSelect.value=t,this.applyCachedTranslations(t))}}document.addEventListener("DOMContentLoaded",()=>{new t});
